apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-webapp-deploy
  name: {{ .Release.Name }}-webapp-deploy
  # namespace: {{ .Values.webapp.namespace }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-webapp-deploy
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.deployment.progressDeadlineSeconds }}
  strategy: 
    type: {{ .Values.deployment.strategy.type }}
    {{- if eq .Values.deployment.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.maxUnavailable }}
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-webapp-deploy
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Release.Name }}-webapp-deploy
                topologyKey: topology.kubernetes.io/zone
      serviceAccount: {{ .Release.Name }}-webapp-sa
      initContainers:
      - name: sleep
        image: busybox
        command: ["/bin/sh", "-c", "sleep 20"]
      - name: flyway
        image: {{ .Values.flyway.image }}
        imagePullPolicy: Always
        resources:
          limits:
            memory: {{ .Values.deployment.limits.memoryLimit }}
            cpu: {{ .Values.deployment.limits.cpuLimit }}
          requests:
            memory: {{ .Values.deployment.requests.memoryRequest }}
            cpu: {{ .Values.deployment.requests.cpuRequest }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-db-cred
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-db-cred
              key: POSTGRES_PASSWORD
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-db-cm
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-db-cm
              key: POSTGRES_DB
        args:
        - "-url=jdbc:postgresql://$(POSTGRES_HOST)/$(POSTGRES_DB)"
        - "-user=$(POSTGRES_USER)"
        - "-password=$(POSTGRES_PASSWORD)"
        - "migrate"
      containers:
      - name: webapp
        image: {{ .Values.webapp.image }}
        imagePullPolicy: Always
        ports:
          - containerPort: {{ .Values.webapp.containerPort }}
        resources:
          limits:
            memory: {{ .Values.deployment.limits.memoryLimit }}
            cpu: {{ .Values.deployment.limits.cpuLimit }}
          requests:
            memory: {{ .Values.deployment.requests.memoryRequest }}
            cpu: {{ .Values.deployment.requests.cpuRequest }}
        env:
        - name: POD_NAMESPACE
          value: {{ .Values.webapp.crNamespace }}
          # valueFrom:
          #   fieldRef:
          #     fieldPath: metadata.namespace
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-db-cred
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-db-cred
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-db-cm
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-db-cm
              key: POSTGRES_HOST
        - name: SCHEMA_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-db-cm
              key: SCHEMA_NAME
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.webapp.containerPort }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.webapp.containerPort }}
      imagePullSecrets:
      - name: {{ .Release.Name }}-reg-cred